class UltrasonicSensor {
public:
  UltrasonicSensor(int led1Pin, int led2Pin, int echoPin, int trigPin, int buzzerPin, int threshold)
    : led1(led1Pin), led2(led2Pin), echoPin(echoPin), trigPin(trigPin), buzzerPin(buzzerPin), threshold(threshold) {}

  void begin() {
    pinMode(led1, OUTPUT);
    pinMode(led2, OUTPUT);
    pinMode(trigPin, OUTPUT);
    pinMode(echoPin, INPUT);
    pinMode(buzzerPin, OUTPUT);
    Serial.begin(9600);
    Serial.println("Starting ultrasonic detector...");
  }

  void update() {
    digitalWrite(trigPin, LOW);
    delayMicroseconds(2);
    digitalWrite(trigPin, HIGH);
    delayMicroseconds(10);
    digitalWrite(trigPin, LOW);

    long duration = pulseIn(echoPin, HIGH);
    int distance = duration * 0.034 / 2;

    Serial.print(distance);
    Serial.println(" cm");

    if (distance < threshold) {
      triggerAlert();
    } else {
      indicateSafe();
    }
  }

private:
  void triggerAlert() {
    tone(buzzerPin, 2000);
    digitalWrite(led2, HIGH);
    delay(400);
    noTone(buzzerPin);
    delay(300);
    digitalWrite(led2, LOW);
  }

  void indicateSafe() {
    digitalWrite(led1, HIGH);
    delay(400);
    digitalWrite(led1, LOW);
  }

  const int led1;
  const int led2;
  const int echoPin;
  const int trigPin;
  const int buzzerPin;
  const int threshold;
};

UltrasonicSensor sensor(4, 5, 2, 3, 6, 30);

void setup() {
  sensor.begin();
}

void loop() {
  sensor.update();
}
